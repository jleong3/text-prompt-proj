{"version":3,"sources":["components/CurrentResponse.js","components/InputTextArea.js","components/ResponseList.js","components/App.js","index.js"],"names":["CurrentResponse","_ref","responses","react_default","a","createElement","className","id","length","InputTextArea","onAiReqSubmit","_useState","useState","_useState2","Object","slicedToArray","textInput","setTextInput","_useState3","_useState4","selectedTextType","setSelectedTextType","AD","DESC","handleRadioSelect","e","_ref2","value","Form","onSubmit","event","preventDefault","v","Field","type","onChange","target","Radio","label","name","checked","Button","Content","href","ResponseList","inquiryHistory","map","stringText","prompt","response","key","includes","split","str","App","_require","require","Configuration","OpenAIApi","setResponses","setInquiryHistory","openai","apiKey","process","getPromptString","console","log","concat","onTextSubmit","asyncToGenerator","regenerator_default","mark","_callee","promptString","apiResponse","wrap","_context","prev","next","createCompletion","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","sent","data","choices","text","toConsumableArray","stop","_x","_x2","apply","this","arguments","Fragment","Segment","padded","color","Grid","columns","Row","Column","components_InputTextArea","components_CurrentResponse","components_ResponseList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.976d5eb5.chunk.js","sourcesContent":["import React from 'react'; \nimport '../css/CustomStyles.css'\n\nconst CurrentResponse = ({ responses }) => {\n\n    return (\n        <div className=\"ui container\">\n            <div id=\"center-text\">\n                <h2>Your Generated Text</h2>\n                <div className=\"ui segment\">\n                    {responses.length > 1 ? \n                        <div>\n                            <p id=\"current-response\">{responses}</p>\n                        </div> \n                        : <p>Enter your product above to view a generated marketing text!</p>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CurrentResponse;\n","import React, { useState } from 'react';\nimport { Button, Radio, Form } from 'semantic-ui-react';\n\nconst InputTextArea = ({ onAiReqSubmit }) => {\n    const [textInput, setTextInput] = useState('');\n    const [selectedTextType, setSelectedTextType] = useState('');\n    const TAG = \"Tag\";\n    const AD = \"Advertisement Text\";\n    const DESC = \"Product Description\";\n\n    const onInputChange = (event) => {\n        setTextInput(event.target.value);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();     // prevents page entirely refreshing \n        onAiReqSubmit(textInput, selectedTextType);\n    };\n\n    const handleRadioSelect = (e, { value }) => {\n        setSelectedTextType(value);\n    };\n\n    return (\n        <div className=\"ui segment\">\n            <Form onSubmit={onSubmit}v>\n                {/* Text Input */}\n                <Form.Field>\n                    <label>What is your product?</label>\n                    <input \n                        type=\"text\" \n                        value={textInput} \n                        onChange={onInputChange}\n                    />\n                </Form.Field>\n                {/* End Text Input */}\n                {/* Radio Button Select */}\n                <Form.Field>\n                    Selected value: <b>{selectedTextType}</b>\n                </Form.Field>\n                <Form.Field>\n                    <Radio\n                        label={TAG}\n                        name='radioGroup'\n                        value={TAG}\n                        checked={selectedTextType === TAG}\n                        onChange={handleRadioSelect}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Radio\n                        label={AD}\n                        name='radioGroup'\n                        value={AD}\n                        checked={selectedTextType === AD}\n                        onChange={handleRadioSelect}\n                    />\n                </Form.Field>\n                <Form.Field>\n                    <Radio\n                        label={DESC}\n                        name='radioGroup'\n                        value={DESC}\n                        checked={selectedTextType === DESC}\n                        onChange={handleRadioSelect}\n                    />\n                </Form.Field>\n                {/* End Radio Button Select */}\n                <Button type='submit' className=\"basic circular blue fluid\">\n                    <Button.Content href=\"#\">\n                        Generate\n                    </Button.Content>\n                </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default InputTextArea;\n","import React from 'react'; \nimport '../css/CustomStyles.css';\n\nconst ResponseList = ({ responses, inquiryHistory }) => {\n    const newLineTxt = (stringText) => {\n        if (stringText.includes(\"\\n\")) {\n            return stringText.split(/\\r?\\n/).map(str => <p>{str}</p>);\n        }\n        return stringText;\n    }\n\n    return (\n        <div className=\"ui container\" id=\"past-inquiries\">\n            <div>\n                <h2 id=\"center-text\">Past Inquiries</h2>\n                <div className=\"ui segment\">\n                    {inquiryHistory.length > 1 ? \n                    <div>\n                        {inquiryHistory.map( ({ prompt, response, key }) => (\n                            <div key={key} className=\"\">\n                                <div className=\"ui grid\">\n                                    <div className=\"row\"> \n                                        <div className=\"four wide column\">\n                                        </div>\n                                        <div id=\"center-text\" className=\"eight wide column\">\n                                            <h3>Prompt: </h3>\n                                            <p>{prompt}</p>\n                                        </div>\n                                        <div className=\"four wide column\">\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"ui grid\">\n                                    <div className=\"row\"> \n                                        <div className=\"four wide column\"></div>\n                                        <div id=\"center-text\" className=\"eight wide column\">\n                                            <h3>Response: </h3>\n                                            <p>{newLineTxt(response)}</p>\n                                        </div>\n                                        <div className=\"four wide column\"></div>\n                                    </div>\n                                </div>\n                                <div className=\"ui divider\"></div>\n                            </div>\n                        ) ) }\n                    </div> : <div id=\"center-text\"><p>None to display yet!</p></div>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ResponseList;\n","import React, { useState } from 'react'; \nimport { Grid } from 'semantic-ui-react'\nimport { Segment } from 'semantic-ui-react';\nimport CurrentResponse from './CurrentResponse';\nimport InputTextArea from './InputTextArea';\nimport ResponseList from './ResponseList';\n\nconst App = () => {\n    // Commenting out API call to prevent too many requests. Using mock data instead. \n\n    const { Configuration, OpenAIApi } = require(\"openai\");\n    const [responses, setResponses] = useState([]);\n    const [inquiryHistory, setInquiryHistory] = useState([]);\n\n    const configuration = new Configuration({\n        apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    }); \n    const openai = new OpenAIApi(configuration);\n\n    const getPromptString = (textInput, selectedTextType) => {\n        console.log(\"getPromptString Text Submitted: \", textInput, selectedTextType);\n\n        switch(selectedTextType) {\n            case \"Tag\":\n                return `Generate a tagline for ${textInput}`;\n            case \"Advertisement Text\": \n                return `Create an advertisement for buying ${textInput}`;\n            case 'Product Description':\n                return `Create a product description for ${textInput}`;\n            default:\n                return `Give me a fun fact about ${textInput}`;\n        }\n    };\n\n    const onTextSubmit = async (textInput, selectedTextType) => {\n        console.log(\"onTextSubmit Text Submitted: \", textInput, selectedTextType);\n        const promptString = getPromptString(textInput, selectedTextType);\n        const apiResponse = await openai.createCompletion(\"text-curie-001\", {\n            prompt: promptString,\n            temperature: 0.7,\n            max_tokens: 256,\n            top_p: 1,\n            frequency_penalty: 0,\n            presence_penalty: 0,\n        })\n        const response = apiResponse.data.choices[0].text;\n\n        // const response = \"\\n1. Pastel colors\\n2. Bright colors\\n3. neutrals\";\n        // const response = \"this is a string.\";\n        // const response = \"\\nA wedding can be any color scheme you want as long as it works with your wedding theme. Here are three color schemes for weddings:\\n\\n1. A neutral color scheme with pops of color.\\n\\n2. A pastel color scheme with a touch of color.\\n\\n3. A colorful, fun color scheme.\";\n        // const response = promptString;\n        // const response = \"\\n1. A light and airy color scheme that incorporates whites, light blues, and light purples.\\n2. A romantic and bright color scheme with pink, peach, and light coral.\\n3. A classic and sophisticated color scheme with black, navy, and light gray.\";\n        setResponses(response);\n        // setTextType(selectedTextType);\n        setInquiryHistory([{prompt: promptString, response: response, key: inquiryHistory.length+1}, ...inquiryHistory])\n\n    };\n    \n    // console.log(\"DATAA: \", textType);\n    console.log(\"INQ HIST: \", inquiryHistory);\n\n    return (\n        <>\n            <Segment padded color=\"blue\">TextGenerator</Segment>\n            <div className=\"ui container\"> \n                <h1 id=\"center-text\">Create amazing marketing text with our text generator!</h1>\n                <div className=\"ui placeholder segment\" id=\"input-container\">\n                    <Grid columns='one'>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <div className=\"ui form\">\n                                    <InputTextArea onAiReqSubmit={onTextSubmit} />\n                                </div>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n                <div className=\"ui placeholder segment\" id=\"blue-border\">\n                    <Grid columns='one'>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <CurrentResponse responses={responses} />\n                                <ResponseList responses={responses} inquiryHistory={inquiryHistory} />\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </div>\n            </div>\n        </>\n    );\n\n};\n\nexport default App; \n","import React from 'react'; \nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />, \n    document.querySelector('#root'),\n);"],"sourceRoot":""}